---
- name: Setup SSH keys and Install K3s on Master Nodes
  hosts: master
  become: true
  vars:
    ansible_user: ec2-user  # Replace with your actual SSH user
  tasks:
    # Generate SSH key pair on Master node
    - name: Generate SSH key pair on Master node
      openssh_keypair:
        path: "/home/{{ ansible_user }}/.ssh/id_rsa"
        size: 2048
        type: rsa
        force: no
      delegate_to: localhost  # Generate on the local machine (control machine)

    # Install K3s Server on Master Node
    - name: Install K3s Server on Master Node
      shell: |
        curl -sfL https://get.k3s.io | sh -
      args:
        creates: /usr/local/bin/k3s

    # Set permissions for k3s.yaml
    - name: Set correct permissions for k3s.yaml
      command: sudo chmod 644 /etc/rancher/k3s/k3s.yaml

    # Add public key to authorized_keys on master (if needed)
    - name: Add public key to authorized_keys on Master node
      authorized_key:
        user: "{{ ansible_user }}"
        state: present
        key: "{{ lookup('file', '/home/{{ ansible_user }}/.ssh/id_rsa.pub') }}"
    
    # Install K3s Agent on Worker Nodes
    - name: Install K3s Agent on Worker Nodes
      hosts: worker
      become: true
      vars:
        k3s_master_ip: "{{ hostvars[groups['master'][0]].k3s_master_ip }}"
        k3s_token: "{{ hostvars[groups['master'][0]].k3s_token }}"
      tasks:
        - name: Install K3s Agent on Worker Node
          shell: |
            curl -sfL https://get.k3s.io | K3S_URL="https://{{ k3s_master_ip }}:6443" K3S_TOKEN="{{ k3s_token }}" sh -
          environment:
            K3S_TOKEN: "{{ k3s_token }}"
            K3S_URL: "https://{{ k3s_master_ip }}:6443"
          args:
            creates: /usr/local/bin/k3s

        - name: Ensure k3s-agent service is started
          service:
            name: k3s-agent
            state: started
            enabled: yes

        # Check if k3s.yaml exists
        - name: Check if k3s.yaml exists on Worker Node
          stat:
            path: /etc/rancher/k3s/k3s.yaml
          register: k3s_yaml_status
          become: true  # Check with elevated permissions

        # If k3s.yaml is missing, copy from Master Node
        - name: Retrieve k3s.yaml from Master Node if missing
          when: not k3s_yaml_status.stat.exists
          block:
            - name: Copy k3s.yaml from Master Node to Worker Node
              shell: |
                scp /etc/rancher/k3s/k3s.yaml {{ ansible_user }}@{{ hostvars['master'][0].ansible_host }}:/tmp/k3s.yaml
              become: true
              delegate_to: localhost

            - name: Place k3s.yaml on Worker Node
              copy:
                src: /tmp/k3s.yaml
                dest: /etc/rancher/k3s/k3s.yaml
                mode: 0644

        - name: Update K3s config to point to Master Node IP
          shell: |
            sudo sed -i "s/localhost/{{ k3s_master_ip }}/g" /etc/rancher/k3s/k3s.yaml
          when: k3s_yaml_status.stat.exists

- name: Verify Worker Node Joins Cluster
  hosts: worker
  become: true
  tasks:
    - name: Check K3s node status on Worker
      command: KUBECONFIG=/etc/rancher/k3s/k3s.yaml /usr/local/bin/k3s kubectl get nodes
      register: k3s_node_status

    - name: Show Worker Node Status
      debug:
        var: k3s_node_status.stdout

- name: Verify the Cluster Status
  hosts: master
  become: true
  tasks:
    - name: Check the status of K3s cluster
      command: /usr/local/bin/k3s kubectl get nodes
      register: k3s_status

    - name: Show K3s Cluster Status
      debug:
        var: k3s_status.stdout
