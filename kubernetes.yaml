- name: Install Kubernetes on all nodes
  hosts: all
  become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3  # Use Python 3 interpreter for Ansible tasks
  tasks:
    - name: Update dnf package cache
      dnf:
        update_cache: yes

    - name: Install Docker
      dnf:
        name: docker
        state: present

    - name: Start and enable Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Install Kubernetes repo
      shell: |
        cat <<EOF > /etc/yum.repos.d/kubernetes.repo
        [kubernetes]
        name=Kubernetes
        baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        enabled=1
        gpgcheck=1
        repo_gpgcheck=1
        gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        exclude=kube*
        EOF
      args:
        warn: false

    - name: Install Kubernetes components
      dnf:
        name:
          - kubeadm
          - kubelet
          - kubectl
        state: present
        enablerepo: kubernetes

    - name: Enable and start kubelet service
      service:
        name: kubelet
        state: started
        enabled: yes

    - name: Disable swap (required by kubelet)
      shell: |
        swapoff -a
        sed -i '/ swap / s/^/#/' /etc/fstab

    - name: Enable required kernel modules
      shell: |
        modprobe br_netfilter
        echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
        echo '1' > /proc/sys/net/ipv4/ip_forward

    - name: Configure sysctl for networking
      copy:
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
        dest: /etc/sysctl.d/k8s.conf
      notify: Reload sysctl

  handlers:
    - name: Reload sysctl
      command: sysctl --system

- name: Initialize Kubernetes master
  hosts: master
  become: yes
  tasks:
    - name: Initialize the Kubernetes master node
      shell: kubeadm init --pod-network-cidr=192.168.0.0/16
      register: kubeadm_init
      ignore_errors: yes

    - name: Set up kubeconfig for the master node
      shell: |
        mkdir -p $HOME/.kube
        cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        chown $(id -u):$(id -g) $HOME/.kube/config
      when: kubeadm_init is successful

    - name: Retrieve the kubeadm join token
      shell: kubeadm token create --print-join-command
      register: join_command
      when: kubeadm_init is successful

    - name: Install Calico networking plugin
      shell: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
      when: kubeadm_init is successful

- name: Join worker nodes to the Kubernetes cluster
  hosts: worker
  become: yes
  tasks:
    - name: Wait for master to generate join command
      pause:
        minutes: 1

    - name: Retrieve the join command from the master node
      set_fact:
        kubeadm_join_command: "{{ hostvars['master'].join_command.stdout }}"

    - name: Join worker nodes to the Kubernetes cluster
      shell: "{{ kubeadm_join_command }}"
