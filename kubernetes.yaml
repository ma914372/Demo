---
- name: Install K3s on all nodes
  hosts: all
  become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3  # Use Python 3 interpreter for Ansible tasks
  tasks:
    - name: Update dnf package cache
      dnf:
        update_cache: yes

    - name: Install dependencies
      dnf:
        name:
          - curl
          - wget
          - vim
        state: present

    - name: Download and install K3s
      shell: |
        curl -sfL https://get.k3s.io | sh -
      args:
        creates: /usr/local/bin/k3s  # Check if k3s is already installed

    - name: Enable and start K3s service
      service:
        name: k3s
        state: started
        enabled: yes

    - name: Check if K3s is installed and running
      shell: k3s --version
      register: k3s_version
      ignore_errors: yes

    - name: Show K3s version
      debug:
        msg: "K3s Version: {{ k3s_version.stdout }}"
      when: k3s_version is defined

- name: Initialize Kubernetes master (for the master node)
  hosts: master
  become: yes
  tasks:
    - name: Check if K3s is installed
      shell: k3s --version
      register: k3s_version
      ignore_errors: yes

    - name: Initialize the K3s cluster as master
      shell: |
        curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE="644" sh -
      when: k3s_version.rc != 0  # Only install K3s on master if it's not already installed

    - name: Save K3s token (for joining worker nodes)
      shell: cat /var/lib/rancher/k3s/server/node-token
      register: k3s_token
      when: k3s_version.rc == 0

    - name: Save the K3s token for joining worker nodes
      set_fact:
        k3s_token: "{{ k3s_token.stdout }}"
      when: k3s_version.rc == 0

- name: Join worker nodes to the K3s cluster
  hosts: worker
  become: yes
  tasks:
    - name: Check if K3s is installed
      shell: k3s --version
      register: k3s_version
      ignore_errors: yes

    - name: Join worker node to K3s cluster
      shell: |
        curl -sfL https://get.k3s.io | K3S_URL=https://{{ hostvars['master'].ansible_facts.default_ipv4.address }}:6443 K3S_TOKEN={{ hostvars['master'].k3s_token }} sh -
      when: k3s_version.rc != 0  # Only install K3s on worker if it's not already installed

    - name: Check worker node status
      shell: kubectl get nodes
      register: k8s_node_status
      failed_when: "'Ready' not in k8s_node_status.stdout"

    - name: Show K3s worker node status
      debug:
        msg: "K3s worker node status: {{ k8s_node_status.stdout }}"
