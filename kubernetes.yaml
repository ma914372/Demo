---
- name: Install K3s on Master Node
  hosts: master
  become: yes
  tasks:
    # Remove conflicting curl-minimal package (if installed)
    - name: Remove conflicting curl-minimal package
      dnf:
        name: curl-minimal
        state: absent
      ignore_errors: yes  # In case the package is not installed, ignore the error

    # Install dependencies (curl, iproute) using dnf
    - name: Install dependencies (curl, iproute) using dnf
      dnf:
        name:
          - curl
          - iproute
        state: present

    # Install K3s Server on Master Node
    - name: Install K3s Server on Master Node
      shell: |
        curl -sfL https://get.k3s.io | sh -
      args:
        creates: /usr/local/bin/k3s

    # Wait for the K3s server to start
    - name: Wait for K3s Server to start
      command: /usr/local/bin/k3s kubectl get nodes
      register: k3s_status
      until: k3s_status.rc == 0
      retries: 10
      delay: 5

    # Generate the K3s token for worker nodes to join
    - name: Generate K3s token
      command: /usr/local/bin/k3s token create --node-name {{ inventory_hostname }}
      register: k3s_token
      changed_when: false

    # Set the K3s token for use by worker nodes
    - name: Set K3s token for worker nodes
      set_fact:
        k3s_token: "{{ k3s_token.stdout }}"
    
    # Debug the K3s token
    - name: Debug the K3s installation token
      debug:
        msg: "The K3s token for worker nodes is: {{ k3s_token }}"

- name: Install K3s Agent on Worker Nodes
  hosts: worker
  become: yes
  tasks:
    # Remove conflicting curl-minimal package (if installed)
    - name: Remove conflicting curl-minimal package
      dnf:
        name: curl-minimal
        state: absent
      ignore_errors: yes  # In case the package is not installed, ignore the error

    # Install dependencies (curl, iproute) using dnf
    - name: Install dependencies (curl, iproute) using dnf
      dnf:
        name:
          - curl
          - iproute
        state: present

    # Install K3s Agent on Worker Nodes
    - name: Install K3s Agent on Worker Nodes
      shell: |
        curl -sfL https://get.k3s.io | K3S_URL=https://{{ hostvars[groups['master'][0]].ansible_host }}:6443 K3S_TOKEN={{ hostvars[groups['master'][0]].k3s_token }} sh -
      args:
        creates: /usr/local/bin/k3s

    # Wait for the K3s agent to register with the server
    - name: Wait for the K3s Agent to register
      command: /usr/local/bin/k3s kubectl get nodes
      register: k3s_agent_status
      until: k3s_agent_status.rc == 0
      retries: 10
      delay: 5

    # Enable K3s Agent service on Worker Nodes
    - name: Enable K3s Agent service on Worker Nodes
      systemd:
        name: k3s-agent
        enabled: yes
        state: started
      ignore_errors: yes  # Ignore errors if the service doesn't exist
