---
- name: Install K3s Cluster (Master and Worker Nodes)
  hosts:
    - masters
    - workers
  become: true
  tasks:

    # Step 1: Remove conflicting curl-minimal package (if installed)
    - name: Remove conflicting curl-minimal package
      dnf:
        name: curl-minimal
        state: absent
      when: ansible_facts.packages['curl-minimal'] is defined
      ignore_errors: true

    # Step 2: Install dependencies (curl, iproute)
    - name: Install dependencies (curl, iproute)
      dnf:
        name:
          - curl
          - iproute
        state: present

    # Step 3: Install K3s Server on Master Nodes
    - name: Install K3s Server on Master Node
      shell: |
        curl -sfL https://get.k3s.io | sh -
      when: "'masters' in group_names"
      args:
        creates: /usr/local/bin/k3s

    # Step 4: Wait for K3s Server to start
    - name: Wait for K3s Server to start
      wait_for:
        port: 6443
        host: "{{ inventory_hostname }}"
        delay: 10
        timeout: 300
      when: "'masters' in group_names"

    # Step 5: Generate K3s token for worker nodes
    - name: Generate K3s token
      shell: /usr/local/bin/k3s token create
      register: k3s_token
      when: "'masters' in group_names"

    # Step 6: Install K3s Agent on Worker Nodes
    - name: Install K3s Agent on Worker Nodes
      shell: |
        curl -sfL https://get.k3s.io | K3S_URL=https://{{ hostvars[groups['masters'][0]].ansible_host }}:6443 K3S_TOKEN={{ k3s_token.stdout }} sh -
      when: "'workers' in group_names"
      args:
        creates: /usr/local/bin/k3s

    # Step 7: Enable K3s Agent service on Worker Nodes
    - name: Enable K3s Agent service on Worker Nodes
      systemd:
        name: k3s-agent
        enabled: true
        state: started
      when: "'workers' in group_names"

    # Step 8: Enable K3s Server service on Master Nodes
    - name: Enable K3s Server service on Master Nodes
      systemd:
        name: k3s
        enabled: true
        state: started
      when: "'masters' in group_names"

    # Step 9: Set correct permissions for kubeconfig file
    - name: Set correct permissions for /etc/rancher/k3s/k3s.yaml
      file:
        path: /etc/rancher/k3s/k3s.yaml
        mode: '0644'
      when: "'masters' in group_names or 'workers' in group_names"

    # Step 10: Check for K3s version to verify installation
    - name: Check K3s version
      shell: /usr/local/bin/k3s --version
      register: k3s_version
      ignore_errors: true
    - debug:
        msg: "K3s Version: {{ k3s_version.stdout }}"
      when: k3s_version.stdout is defined
