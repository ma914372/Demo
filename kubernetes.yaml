- name: Install K3s on Master Nodes
  hosts: master
  become: true
  tasks:
    - name: Install K3s Server on Master Node
      shell: |
        curl -sfL https://get.k3s.io | sh -
      args:
        creates: /usr/local/bin/k3s

    - name: Set correct permissions for k3s.yaml
      file:
        path: /etc/rancher/k3s/k3s.yaml
        mode: "0644"

- name: Wait for K3s Server to Start on Master Node
  hosts: master
  become: true
  tasks:
    - name: Wait for Kubernetes API to be accessible
      wait_for:
        host: "{{ hostvars[groups['master'][0]].private_ip }}"
        port: 6443
        delay: 10
        timeout: 300

- name: Generate K3s Token and Set Master IP
  hosts: master
  become: true
  tasks:
    - name: Generate K3s token for worker nodes
      command: /usr/local/bin/k3s token create
      register: k3s_token

    - name: Set Master IP and Token
      set_fact:
        k3s_master_ip: "{{ hostvars[groups['master'][0]]['private_ip'] }}"
        k3s_token: "{{ k3s_token.stdout }}"

- name: Fetch k3s.yaml from Master Node to Control Machine
  hosts: master
  become: false
  tasks:
    - name: Copy k3s.yaml from Master to Ansible Control Machine
      fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: /tmp/k3s.yaml
        flat: yes

- name: Install K3s Agent on Worker Nodes
  hosts: worker
  become: true
  vars:
    k3s_master_ip: "{{ hostvars[groups['master'][0]].private_ip }}"  
    k3s_token: "{{ hostvars[groups['master'][0]].k3s_token }}"         

  tasks:
    - name: Install K3s Agent on Worker Node
      shell: |
        curl -sfL https://get.k3s.io | K3S_URL="https://{{ k3s_master_ip }}:6443" K3S_TOKEN="{{ k3s_token }}" sh -
      environment:
        K3S_TOKEN: "{{ k3s_token }}"
        K3S_URL: "https://{{ k3s_master_ip }}:6443"
      args:
        creates: /usr/local/bin/k3s

    - name: Ensure k3s-agent service is started
      service:
        name: k3s-agent
        state: started
        enabled: yes

    - name: Check if k3s.yaml exists with become
      stat:
        path: /etc/rancher/k3s/k3s.yaml
      register: k3s_yaml_status
      become: true

- name: Upload k3s.yaml from Ansible Control Machine to Worker Nodes
  hosts: worker
  become: true
  vars:
    k3s_master_ip: "{{ hostvars[groups['master'][0]].private_ip }}"
  tasks:
    - name: Ensure the .kube directory exists on Worker Nodes
      file:
        path: /home/{{ ansible_ssh_user }}/.kube
        state: directory
        mode: '0755'

    - name: Copy k3s.yaml from Control Machine to Worker Nodes
      copy:
        src: /tmp/k3s.yaml
        dest: /home/{{ ansible_ssh_user }}/.kube/k3s.yaml
        mode: '0644'

- name: Update K3s config to point to Master Node IP
  hosts: worker
  become: true
  vars:
    k3s_master_ip: "{{ hostvars[groups['master'][0]].private_ip }}"
  tasks:
    - name: Update server IP in k3s.yaml
      lineinfile:
        path: /home/{{ ansible_ssh_user }}/.kube/k3s.yaml
        regexp: '^    server: https://127.0.0.1:6443$'
        line: "    server: https://{{ k3s_master_ip }}:6443"

    - name: Verify k3s.yaml exists on Worker Nodes
      stat:
        path: /home/{{ ansible_ssh_user }}/.kube/k3s.yaml
      register: file_status

    - name: Show file existence status
      debug:
        msg: "k3s.yaml exists: {{ file_status.stat.exists }}"

- name: Verify Worker Node Joins Cluster
  hosts: worker
  become: true
  tasks:
    - name: Check K3s node status
      shell: KUBECONFIG=/home/{{ ansible_ssh_user }}/.kube/k3s.yaml kubectl get nodes
      register: k3s_node_status

    - name: Show Worker Node Status
      debug:
        var: k3s_node_status.stdout

- name: Verify the Cluster Status
  hosts: master
  become: true
  tasks:
    - name: Check the status of K3s cluster
      command: /usr/local/bin/k3s kubectl get nodes
      register: k3s_status

    - name: Show K3s Cluster Status
      debug:
        var: k3s_status.stdout
