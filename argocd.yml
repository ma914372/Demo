- name: Install Argo CD using kubectl
  hosts: master
  become: yes
  tasks:
    - name: Create a namespace for Argo CD
      shell: kubectl create namespace argocd

    - name: Install Argo CD and patch service to NodePort
      shell: >
        kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml &&
        kubectl rollout status -n argocd deployment --timeout=300s --watch &&
        kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "NodePort"}}'
    
    - name: Copy Git Repo Secret file to the master node
      copy:
        src:  /tmp/secret.yml       # Path on your local Ansible machine
        dest: /tmp/secret.yml           # Temporary location on the master node

    - name: Configure Git Repo
      shell: kubectl apply -n argocd -f /tmp/secret.yml
      become: yes

    - name: Copy Git Repo Secret file to the master node
      copy:
        src: /tmp/repo/application.yml        # Path on your local Ansible machine
        dest: /tmp/application.yml           # Temporary location on the master node

    - name: Configure Git Repo
      shell: kubectl apply -n argocd -f /tmp/application.yml
      become: yes

    - name: Extract Argo CD HTTPS port from Kubernetes service
      command: >
        kubectl get svc argocd-server -n argocd -o=jsonpath='{.spec.ports[1].nodePort}'
      register: argocd_https_port

    - name: Save the port number to a file
      copy:
        content: "{{ argocd_https_port.stdout }}"
        dest: "/tmp/argocd_https_port.txt"
        mode: '0644'

    - name: Extract Argo CD admin password from Kubernetes secret
      shell: kubectl get secret argocd-initial-admin-secret -n argocd -o=jsonpath='{.data.password}' | base64 --decode
      register: argocd_admin_password


    - name: Save the Argo CD admin password to a file
      copy:
        content: "{{ argocd_admin_password.stdout }}"
        dest: "/tmp/argocd_admin_password.txt"
        mode: '0644'

    - name: Copy Git Repo Secret file to the master node
      copy:
        src:  /tmp/repo/webhook.sh       # Path on your local Ansible machine
        dest: /tmp/webhook.sh           # Temporary location on the master node

    - name: Run webhook.sh script
      shell: sh /tmp/webhook.sh
      become: yes
      register: script_output

    - debug:
      var: script_output.stdout_lines
